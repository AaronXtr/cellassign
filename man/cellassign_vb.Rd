% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cellassign_vb.R
\name{cellassign_vb}
\alias{cellassign_vb}
\title{Annotate cells to cell types using cellassign (VB)}
\usage{
cellassign_vb(exprs_obj, marker_gene_info, s = NULL, min_delta = 2,
  X = NULL, B = 10, n_batches = 1, dirichlet_concentration = 1,
  min_rho_offset = 0.001, rn_inputs = NULL, rn_layers = c(32, 32),
  num_vb_samples = 1, tol = 1e-04, max_epochs = 5000,
  period_length = 100, num_tol_periods = 2, learning_rate = 0.01,
  verbose = TRUE, sce_assay = "counts", num_runs = 1)
}
\arguments{
\item{exprs_obj}{Either a matrix representing gene
expression counts or a \code{SummarizedExperiment}.
See details.}

\item{marker_gene_info}{Information relating marker genes to cell types.
See details.}

\item{s}{Numeric vector of cell size factors}

\item{min_delta}{The minimum log fold change a marker gene must
be over-expressed by in its cell type}

\item{X}{Numeric matrix of external covariates. See details.}

\item{B}{Number of bases to use for RBF dispersion function}

\item{n_batches}{Number of data subsample batches to use in inference}

\item{dirichlet_concentration}{Dirichlet concentration parameter for cell type abundances}

\item{min_rho_offset}{Minimum offset for rho (uncertainty from 0 or 1)}

\item{rn_inputs}{Inputs for recognition network layer (NULL turns off the recognition network)}

\item{rn_layers}{Number of nodes in each layer in the recognition network}

\item{num_vb_samples}{Number of variational samples to take}

\item{tol}{The change in log marginal likelihood value (in pct)
below which the VB algorithm is considered converged}

\item{max_epochs}{Maximum number of epochs}

\item{period_length}{Period length (in epochs)}

\item{num_tol_periods}{Number of consecutive periods with less change than tol to converge after}

\item{learning_rate}{Learning rate of ADAM optimization}

\item{verbose}{Logical - should running info be printed?}

\item{sce_assay}{The \code{assay} from the input
\code{SingleCellExperiment} to use: this assay
should always represent raw counts.}

\item{num_runs}{Number of EM runs to perform}
}
\value{
An object of class \code{cellassign_fit}. See \code{details}
}
\description{
Automatically annotate cells to known types based
on the expression patterns of
a priori known marker genes.
}
\details{
\strong{Input format}
\code{exprs_obj} should be either a
\code{SummarizedExperiment} (we recommend the
\code{SingleCellExperiment} package) or a
cell (row) by gene (column) matrix of
\emph{raw} RNA-seq counts (do \strong{not}
log-transform or otherwise normalize).

\code{marker_gene_info} should either be
\itemize{
\item A gene by cell type binary matrix, where a 1 indicates that a gene is a
marker for a cell type, and 0 otherwise
\item A list with names corresponding to cell types, where each entry is a
vector of marker gene names. These are converted to the above matrix using
the \code{marker_list_to_mat} function.
}

\strong{Cell size factors}
If the cell size factors \code{s} are
not provided they are computed using the
\code{computeSumFactors} function from
the \code{scran} package.

\strong{Covariates}
If \code{X} is not \code{NULL} then it should be
an \code{N} by \code{P} matrix
of covariates for \code{N} cells and \code{P} covariates.
Such a matrix would typically
be returned by a call to \code{model.matrix}
\strong{with no intercept}. It is also highly
recommended that any numerical (ie non-factor or one-hot-encoded)
covariates be standardized
to have mean 0 and standard deviation 1.

\strong{cellassign_fit}
A call to \code{cellassign} returns an object
of class \code{cellassign_fit}. To access the
MLE estimates of cell types, call \code{fit$cell_type}.
To access all MLE parameter
estimates, call \code{fit$mle_params}.
}
\examples{
data(example_sce)
data(example_rho)

fit <- em_result <- cellassign(example_sce,
marker_gene_info = example_rho,
s = colSums(SummarizedExperiment::assay(example_sce, "counts")),
learning_rate = 1e-2,
shrinkage = TRUE,
verbose = FALSE)


}
